---
import Avatar, { type Props as AvatarProps } from './Avatar.astro'

interface NavItem {
  name: string
  href: string
}

export interface Props {
  navItems: NavItem[]
  avatar?: AvatarProps
}

const { navItems, avatar } = Astro.props
const currentPath = Astro.url.pathname
---

<div class='container-navbar'>
  {
    currentPath !== avatar?.redirect?.href && avatar && (
      <Avatar
        src={avatar.src}
        alt={avatar.alt}
        redirect={avatar.redirect}
        size={avatar.size}
        format={avatar.format}
      />
    )
  }

  <nav>
    <div class='container-navbar-items'>
      {navItems.map((item) => <a href={item.href}>{item.name}</a>)}
    </div>
  </nav>
</div>

<style>
  .container-navbar {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    width: 100%;
    position: sticky;
    top: 1rem;
    z-index: 10;
  }

  nav {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    background-color: #ffffff;
    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
    border-radius: 2rem;
    padding: 0.5rem 1.5rem;
  }

  .container-navbar-items {
    display: flex;
    gap: 1.5rem;

    a {
      font-weight: 600;
      font-size: 0.7rem;
    }
  }
</style>

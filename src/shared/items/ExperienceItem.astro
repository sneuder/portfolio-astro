---
import Paragraph, {
  type Props as ParagraphProps,
} from '@/shared/typography/Paragraph.astro'
import { TypographyType } from '@/shared/typography/schema'
import { type Experience } from '@/models/experience'
import { formatDateRange } from '@/services/dateFormatter'
import Tag from '@/shared/tag/Tag.astro'
import Header, {
  type Props as headerProps,
} from '@/shared/typography/Header.astro'
import List, {
  LIST_TYPE,
  type Props as ListProps,
} from '@/shared/typography/List.astro'
import LinkLocal from '@/shared/link/LinkLocal.astro'

export enum EXPERIENCE_VARIANT {
  MINIMAL = 'MINIMAL',
  FULL = 'FULL',
}

export interface Props extends Experience {
  variant: EXPERIENCE_VARIANT
}

const {
  companyName,
  generalDescription,
  mainStack,
  lastPosition,
  variant,
  localLink,
} = Astro.props

const positionInfo: headerProps = {
  title: `${companyName} Â· ${lastPosition.name}`,
  type: TypographyType.SECONDARY,
}

const descriptionParagraph: ParagraphProps = {
  title: generalDescription,
  type: TypographyType.SECONDARY,
  format: {},
  style: {
    textAlign: 'justify',
  },
}

if (variant === EXPERIENCE_VARIANT.MINIMAL) {
  descriptionParagraph.format = {
    ...descriptionParagraph.format,
    elipsis: {
      lines: 3,
    },
  }
}

const dateParagraph: ParagraphProps = {
  title: formatDateRange(lastPosition.from, lastPosition.to),
  type: TypographyType.TERTIARY,
}

const dutiesList: ListProps = {
  list: lastPosition.responsabilities.map((duty) => duty.description),
  type: LIST_TYPE.UNORDER,
}
---

<div class='container' id={localLink}>
  <div class='date'>
    <div></div>
    <Paragraph title={dateParagraph.title} type={dateParagraph.type} />
  </div>
  <LinkLocal href={localLink} directPage='experience'>
    <Header title={positionInfo.title} type={positionInfo.type} />
  </LinkLocal>

  <Paragraph {...descriptionParagraph} />

  {
    variant === EXPERIENCE_VARIANT.FULL && (
      <List list={dutiesList.list} type={dutiesList.type} />
    )
  }

  <div class='skills'>
    {mainStack?.map((stack) => <Tag title={stack} />)}
  </div>
</div>

<style>
  .container {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .date {
    display: flex;
    align-items: center;
    gap: 0.7rem;

    div {
      width: 2px;
      height: 1rem;
      border-radius: 0.5rem;
      background-color: #71717a;
    }
  }

  .skills {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }
</style>

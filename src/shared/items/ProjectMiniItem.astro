---
import Header, {
  type Props as HeaderProps,
} from '@/shared/typography/Header.astro'

import Paragraph, {
  type Props as ParagraphProps,
} from '@/shared/typography/Paragraph.astro'

import { TypographyType } from '@/shared/typography/schema'
import { type Project } from '@/models/project'
import Tag, { type Props as TagProps, TAG_TYPE } from '../tag/Tag.astro'
import COLORS from '@/theme/colors'
import CardBase from '@/shared/cards/CardBase.astro'
import { ProjectLinkMapper, ProjectLinkIconMapper } from '@/data/projects'
import Link from '@/shared/link/Link.astro'
import Icon, { type Props as IconProps } from '@/shared/icon/Icon.astro'
import LinkIcon, { type Props as LinkIconProps } from '@/shared/link/LinkIcon.astro'

interface Props extends Pick<Project, 'name' | 'type' | 'links'> {}

const { name, type, links } = Astro.props

const projectHeader: HeaderProps = {
  title: name,
  type: TypographyType.TERTIARY,
  format: {
    noWrap: true,
  },
}

const projectType: TagProps = {
  title: type,
  type: TAG_TYPE.TERTIARY,
}
---

<CardBase backgroundColor={COLORS.LIGHTER_GREY}>
  <div class='container-project'>
    <div class='container-information'>
      <Header
        title={projectHeader.title}
        type={projectHeader.type}
        format={projectHeader.format}
      />
      <Tag {...projectType} />
    </div>

    {
      links.length !== 0 && (
        <div class='container-links'>
          {links.map((link) => {
            const linkIconsProps: LinkIconProps = {
              icon: {
                name: ProjectLinkIconMapper[link.type],
              },
              link: {
                href: link.href,
                newTab: true,
              },
              paragraph: {
                title: ProjectLinkMapper[link.type],
                type: TypographyType.TERTIARY,
              },
            }

            return <LinkIcon {...linkIconsProps} />
          })}
        </div>
      )
    }
  </div>
</CardBase>

<style>
  .container-project {
    display: grid;
    grid-template-columns: 1fr;
    align-items: start;
    gap: 0.5rem;
  }

  .container-information {
    display: flex;
    justify-content: space-between;
    gap: 2rem;
    align-items: flex-start;
  }

  .container-links {
    display: flex;
    gap: 1.25rem;
  }
</style>

---
import type { Project } from '@/models/project'
import Paragraph, {
  type Props as ParagraphProps,
} from '@/shared/typography/Paragraph.astro'
import Header, {
  type Props as HeaderProps,
} from '@/shared/typography/Header.astro'
import { TypographyType } from '@/shared/typography/schema'
import Tag from '../tag/Tag.astro'
import LinkIcon, {
  type Props as LinkIconProps,
} from '@/shared/link/LinkIcon.astro'
import { IconsMapperName } from '@/constants/Icon'

interface Props extends Project {}

const { name, description, stack, links, localLink } = Astro.props

const headerProjectProps: HeaderProps = {
  title: name,
  type: TypographyType.SECONDARY,
}

const descriptionProjectProp: ParagraphProps = {
  title: description,
  type: TypographyType.SECONDARY,
  style: {
    textAlign: 'justify',
  },
}
---

<div class:list={['container']} id={localLink}>
  <div class='container-information'>
    <div class='container-header'>
      <Header {...headerProjectProps} />

      {
        links.length !== 0 && (
          <div class='container-links'>
            {links.map((link) => {
              const linkIconProjectProp: LinkIconProps = {
                icon: {
                  name: link.icon,
                },
                link: {
                  href: link.href,
                  newTab: true,
                },
                paragraph: {
                  title: IconsMapperName[link.icon],
                  type: TypographyType.TERTIARY,
                },
              }

              return <LinkIcon {...linkIconProjectProp} />
            })}
          </div>
        )
      }
    </div>

    <Paragraph {...descriptionProjectProp} />

    <div class='container-stack'>
      <div class='stack'>
        {stack.map((s) => <Tag title={s} />)}
      </div>
    </div>
  </div>
</div>

<style>
  .container {
    display: flex;
    gap: 1.5rem;

    @media screen and (max-width: 600px) {
      flex-direction: column !important;
    }
  }

  .container-information {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .container-links,
  .container-stack {
    display: flex;
    gap: 1rem;

    .stack {
      display: flex;
      gap: 0.5rem;
    }
  }

  .container-stack {
    justify-content: space-between;
    /* align-self: flex-end; */
    gap: 2rem;
    flex-wrap: wrap;
  }

  .container-header {
    display: flex;
    gap: 1rem;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.75rem;
  }
</style>

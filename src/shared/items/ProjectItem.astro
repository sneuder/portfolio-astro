---
import { Image } from 'astro:assets'
import type { Project } from '@/models/project'
import Paragraph, {
  type Props as ParagraphProps,
} from '@/shared/typography/Paragraph.astro'
import Header, {
  type Props as HeaderProps,
} from '@/shared/typography/Header.astro'
import { TypographyType } from '@/shared/typography/schema'
import Tag, { TAG_TYPE, type Props as TagProps } from '../tag/Tag.astro'
import CardBase from '@/shared/cards/CardBase.astro'
import COLORS from '@/theme/colors'
import LinkIcon, { type Props as LinkIconProps } from '@/shared/link/LinkIcon.astro'
import { ProjectLinkIconMapper, ProjectLinkMapper } from '@/data/projects'

interface Props extends Project {}

const { name, description, stack, image, links, type } = Astro.props

const headerProjectProps: HeaderProps = {
  title: name,
  type: TypographyType.SECONDARY,
}

const descriptionProjectProp: ParagraphProps = {
  title: description,
  type: TypographyType.PRIMARY,
  format: {
    justified: true,
  },
}

const projectType: TagProps = {
  title: type,
  type: TAG_TYPE.TERTIARY,
}
---

<CardBase padding='1rem' backgroundColor={COLORS.LIGHTER_GREY}>
  <div class:list={['container']}>
    <Image class='img' src={image} alt={name} width={200} height={113.9} />
    <div class='container-information'>
      <div class='container-header'>
        <Header {...headerProjectProps} />
        <Tag {...projectType} />
      </div>
      <Paragraph {...descriptionProjectProp} />
      <div class='container-stack'>
        <div class='stack'>
          {stack.map((s) => <Tag title={s} />)}
        </div>

        {
          links.length !== 0 && (
            <div class='container-links'>
              {links.map((link) => {
                const linkIconProjectProp: LinkIconProps = {
                  icon: {
                    name: ProjectLinkIconMapper[link.type],
                  },
                  link: {
                    href: link.href,
                    newTab: true,
                  },
                  paragraph: {
                    title: ProjectLinkMapper[link.type],
                    type: TypographyType.TERTIARY,
                  },
                }

                return <LinkIcon {...linkIconProjectProp} />
              })}
            </div>
          )
        }
      </div>
    </div>
  </div>
</CardBase>

<style>
  .img {
    max-width: 100%;
    width: 200px;
    aspect-ratio:200 / 114 !important;
    border-radius: 0.25rem;
    object-fit: cover;

    @media screen and (max-width: 600px) {
      height: auto;
      width: 100%;
    }
  }

  .container {
    display: flex;
    gap: 1.5rem;

    @media screen and (max-width: 600px) {
      flex-direction: column !important;
    }
  }

  .container-information {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .container-links,
  .container-stack {
    display: flex;
    gap: 1rem;

    .stack {
      display: flex;
      gap: 0.5rem;
    }
  }

  .container-stack {
    justify-content: space-between;
    gap: 2rem;
    flex-wrap: wrap;
  }

  .container-header {
    display: flex;
    gap: 1rem;
    justify-content: space-between;
    align-items: center;
  }
</style>
